 import "dotlin/c.dt.g.dart" show C;
 import "package:meta/meta.dart" ;
@sealed class Constants{ static final Constants$Companion  $companion = Constants$Companion.$instance; static const String  OPENING_CURLY_BRACKET = "{"; static const String  CLOSING_CURLY_BRACKET = "}"; static const String  OPENING_ROUND_BRACKET = "("; static const String  CLOSING_ROUND_BRACKET = ")"; static const String  OPENING_SQUARE_BRACKET = "["; static const String  CLOSING_SQUARE_BRACKET = "]"; static const String  ARROW = "=>"; static final C  COLON = Constants$Companion.$instance.$COLON; static final C  COMMA = Constants$Companion.$instance.$COMMA; static final C  EQUAL = Constants$Companion.$instance.$EQUAL; static final C  GREATER_THAN = Constants$Companion.$instance.$GREATER_THAN; static final C  PERIOD = Constants$Companion.$instance.$PERIOD; static final C  SEMICOLON = Constants$Companion.$instance.$SEMICOLON;}
@sealed class Constants$Companion{  Constants$Companion._() : super();@nonVirtual final String  $OPENING_CURLY_BRACKET = "{";@nonVirtual final String  $CLOSING_CURLY_BRACKET = "}";@nonVirtual final String  $OPENING_ROUND_BRACKET = "(";@nonVirtual final String  $CLOSING_ROUND_BRACKET = ")";@nonVirtual final String  $OPENING_SQUARE_BRACKET = "[";@nonVirtual final String  $CLOSING_SQUARE_BRACKET = "]";@nonVirtual final String  $ARROW = "=>";@nonVirtual final C  $COLON = C(":");@nonVirtual final C  $COMMA = C(",");@nonVirtual final C  $EQUAL = C("=");@nonVirtual final C  $GREATER_THAN = C(">");@nonVirtual final C  $PERIOD = C(".");@nonVirtual final C  $SEMICOLON = C(";"); static final Constants$Companion  $instance = Constants$Companion._();}